import sys
input = sys.stdin.readline

def dfs(now,destIdx):
  global cnt
  if now == dest[destIdx]:
    if destIdx == m-1:
      cnt +=1
      return
    else:
      destIdx += 1
  x,y = now
  visited[x][y] = True
  for i in range(4):
    nx = x+dx[i]
    ny = y+dy[i]
    if 0<=nx<n and 0<=ny<n and not visited[nx][ny] and ar[nx][ny] == 0:
      dfs([nx,ny],destIdx)
      
  visited[x][y] = False
  return
  
    
  

n,m = map(int,input().split())
ar = []
visited = []
dest = []
cnt = 0

for i in range(n):
  ar.append(list(map(int,input().split())))

for i in range(n):
  visited.append([False]*n)

for i in range(m):
  x,y = map(int,input().split())
  dest.append([x-1,y-1])

dx = [-1,1,0,0]
dy = [0,0,-1,1]

dfs(dest[0],1)
print(cnt)
